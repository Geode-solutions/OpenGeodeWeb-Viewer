name: CICD

on:
  push:
    branches: [master, next]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Test
      run: |
        pip install pytest
        pip install -r requirements.txt
        pip install .
        pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        id: semantic-release
        with:
          github_token: ${{ secrets.TOKEN }}
      - name: Build
        run: |
          python3 -m pip install --upgrade build
          python3 -m build
      - name: Upload PYPI
        if: steps.semantic-release.outputs.released == 'true'
        run: |
          python3 -m pip install twine
          python3 -m twine upload --repository pypi dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}
      - name: Setup NODE
        uses: actions/setup-node@v3
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: "20.x"
      - name: Upload NPM
        if: steps.semantic-release.outputs.released == 'true'
        run: |
          pwd
          cd ${{ github.workspace }}
          npm i
          npm run json
          jq '.version="${{steps.semantic-release.outputs.version}}"' package.json > temp && mv temp package.json
          cat package.json
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Merge master -> next
        if: github.ref == 'refs/heads/master'
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: master
          target_branch: next
          github_token: ${{ github.token }}
